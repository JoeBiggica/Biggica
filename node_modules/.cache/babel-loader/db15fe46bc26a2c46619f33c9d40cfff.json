{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { initializeStore } from \"../redux/makeStore\";\nvar isServer = typeof window === 'undefined';\nvar __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nfunction getOrCreateStore(initial_state) {\n  // Always make a new store if server, otherwise state is shared between requests\n  if (isServer) {\n    return initializeStore(initial_state);\n  } // Create store if unavailable on the client and set it on the window object\n\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = initializeStore(initial_state);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n}\n\nexport default (function (App) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(AppWithRedux, _React$Component);\n\n      _createClass(AppWithRedux, null, [{\n        key: \"getInitialProps\",\n        value: function () {\n          var _getInitialProps = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee(appContext) {\n            var reduxStore, appProps;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    // Get or Create the store with `undefined` as initial_state\n                    // This allows you to set a custom default initial_state\n                    reduxStore = getOrCreateStore(); // Provide the store to getInitialProps of pages\n\n                    appContext.ctx.reduxStore = reduxStore;\n                    appProps = {};\n\n                    if (!(typeof App.getInitialProps === 'function')) {\n                      _context.next = 7;\n                      break;\n                    }\n\n                    _context.next = 6;\n                    return App.getInitialProps(appContext);\n\n                  case 6:\n                    appProps = _context.sent;\n\n                  case 7:\n                    return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n                      initial_state: reduxStore.getState()\n                    }));\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function getInitialProps(_x) {\n            return _getInitialProps.apply(this, arguments);\n          }\n\n          return getInitialProps;\n        }()\n      }]);\n\n      function AppWithRedux(props) {\n        var _this;\n\n        _classCallCheck(this, AppWithRedux);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AppWithRedux).call(this, props));\n        _this.reduxStore = getOrCreateStore(props.initial_state);\n        return _this;\n      }\n\n      _createClass(AppWithRedux, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(App, _extends({}, this.props, {\n            reduxStore: this.reduxStore\n          }));\n        }\n      }]);\n\n      return AppWithRedux;\n    }(React.Component)\n  );\n});","map":{"version":3,"sources":["/Users/joebiggica/Engineering/Apps/Biggica/lib/with-redux-store.js"],"names":["isServer","__NEXT_REDUX_STORE__","initializeStore","window","React","reduxStore","getOrCreateStore","appContext","appProps","App","initial_state","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { initializeStore } from '../redux/makeStore';\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nfunction getOrCreateStore (initial_state) {\n\t// Always make a new store if server, otherwise state is shared between requests\n\tif (isServer) {\n\t\treturn initializeStore(initial_state)\n\t}\n\n\t// Create store if unavailable on the client and set it on the window object\n\tif (!window[__NEXT_REDUX_STORE__]) {\n\t\twindow[__NEXT_REDUX_STORE__] = initializeStore(initial_state)\n\t}\n\treturn window[__NEXT_REDUX_STORE__]\n}\n\nexport default App => {\n\treturn class AppWithRedux extends React.Component {\n\t\tstatic async getInitialProps (appContext) {\n\t\t\t// Get or Create the store with `undefined` as initial_state\n\t\t\t// This allows you to set a custom default initial_state\n\t\t\tconst reduxStore = getOrCreateStore()\n\n\t\t\t// Provide the store to getInitialProps of pages\n\t\t\tappContext.ctx.reduxStore = reduxStore\n\n\t\t\tlet appProps = {}\n\t\t\tif (typeof App.getInitialProps === 'function') {\n\t\t\t\tappProps = await App.getInitialProps(appContext)\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...appProps,\n\t\t\t\tinitial_state: reduxStore.getState()\n\t\t\t}\n\t\t}\n\n\t\tconstructor (props) {\n\t\t\tsuper(props)\n\t\t\tthis.reduxStore = getOrCreateStore(props.initial_state)\n\t\t}\n\n\t\trender () {\n\t\t\treturn <App {...this.props} reduxStore={this.reduxStore} />\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}